// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Rcpp_thresh_analysis
int Rcpp_thresh_analysis(std::string& outfile_prefix, igraph_t& G, double l, double u, double increment, int windowsize, int minimumpartitionsize, int minimum_cliquesize, double min_alpha, double max_alpha, double alpha_increment, int num_samples, double significance_alpha, double bonferroni_corrected, std::set<int> methods);
RcppExport SEXP _thresholding_Rcpp_thresh_analysis(SEXP outfile_prefixSEXP, SEXP GSEXP, SEXP lSEXP, SEXP uSEXP, SEXP incrementSEXP, SEXP windowsizeSEXP, SEXP minimumpartitionsizeSEXP, SEXP minimum_cliquesizeSEXP, SEXP min_alphaSEXP, SEXP max_alphaSEXP, SEXP alpha_incrementSEXP, SEXP num_samplesSEXP, SEXP significance_alphaSEXP, SEXP bonferroni_correctedSEXP, SEXP methodsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type outfile_prefix(outfile_prefixSEXP);
    Rcpp::traits::input_parameter< igraph_t& >::type G(GSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type increment(incrementSEXP);
    Rcpp::traits::input_parameter< int >::type windowsize(windowsizeSEXP);
    Rcpp::traits::input_parameter< int >::type minimumpartitionsize(minimumpartitionsizeSEXP);
    Rcpp::traits::input_parameter< int >::type minimum_cliquesize(minimum_cliquesizeSEXP);
    Rcpp::traits::input_parameter< double >::type min_alpha(min_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type max_alpha(max_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_increment(alpha_incrementSEXP);
    Rcpp::traits::input_parameter< int >::type num_samples(num_samplesSEXP);
    Rcpp::traits::input_parameter< double >::type significance_alpha(significance_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type bonferroni_corrected(bonferroni_correctedSEXP);
    Rcpp::traits::input_parameter< std::set<int> >::type methods(methodsSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_thresh_analysis(outfile_prefix, G, l, u, increment, windowsize, minimumpartitionsize, minimum_cliquesize, min_alpha, max_alpha, alpha_increment, num_samples, significance_alpha, bonferroni_corrected, methods));
    return rcpp_result_gen;
END_RCPP
}
