// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// function_test
int function_test(int c);
RcppExport SEXP _thresholding_function_test(SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(function_test(c));
    return rcpp_result_gen;
END_RCPP
}
// print_vector
void print_vector(int i);
RcppExport SEXP _thresholding_print_vector(SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    print_vector(i);
    return R_NilValue;
END_RCPP
}
// thresholdAnalysis
int thresholdAnalysis(double thing, int other_thing, int optional);
RcppExport SEXP _thresholding_thresholdAnalysis(SEXP thingSEXP, SEXP other_thingSEXP, SEXP optionalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type thing(thingSEXP);
    Rcpp::traits::input_parameter< int >::type other_thing(other_thingSEXP);
    Rcpp::traits::input_parameter< int >::type optional(optionalSEXP);
    rcpp_result_gen = Rcpp::wrap(thresholdAnalysis(thing, other_thing, optional));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _thresholding_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_thresholding_function_test", (DL_FUNC) &_thresholding_function_test, 1},
    {"_thresholding_print_vector", (DL_FUNC) &_thresholding_print_vector, 1},
    {"_thresholding_thresholdAnalysis", (DL_FUNC) &_thresholding_thresholdAnalysis, 3},
    {"_thresholding_rcpp_hello_world", (DL_FUNC) &_thresholding_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_thresholding(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
